javac Dog.java 
java Dog 
	Dog.main()


class Dog{

	public static void main(String args[]){
		System.out.println();
	}

}
//PrintStream -> println(); 



//System 
//static out - variable 

--------------------------------------

data type :- 
1. primitive 
	byte:1 short:2 char:2 int:4 long:8 float:4 double:8 boolean:1bit[true-false] 
  
2. non-primitive 
	class object array enum XXXX 

--------------------------------------
variable:- data name -> value 
	int a;
	
type variable ? 
1:- local 
2:- instance 
3:- static 

----------------------------------------------
class Dog{
	static int s; //static 
	int i; //instance 	
	void run(){
		int l; //local 
	}

	public static void main(String args[]){
		System.out.println();
	}
}
Dog g = new Dog();
Dog c = new Dog();
g.i = 100
c.i = 200 
c.i->200 g.i->100
g.s = 90	
c.s = 98;	
g.s -> 98
	
	s = 98 
g->i=100		
  run()

c->i=200 	  
  run() 
----------------------------------------------

create a class Employee having members, employee name , salary and tax. 
create methods to capture data from user and print those data. 

-----------------------------------------------------------------
Employee.java
public class Employee{
	main()
}
-----------------------------------------------------------------
Scanner -> 


import java.util.*; 
import java.util.Scanner;
import java.lang.*;

System.out.println();
String  

package --- folder 

java 
	lang
	io
	applet
	sql
	security 
	util 
		regex 
			Pattern 
java.util.*;//Scanner Date 
java.util.Scanner;

java.util.regex.*;

-----------------------------------------------------------------
 
------------------------------------------------

class A{
	protected void add(){ //add->a}
}

class B extends A{
	 
	public void add(){
		//add - B 
	}


	void sub(){
		 super.add();
	}
}

main 
	B obj = new B() -> obj.sub()

------------------------------------------------
default private protected public -> 

class : default , public 
variable : all
method : all


static : 

class : no [ outer ] inner - yes 
variable : static 
method : static 


final : 

class : final [ no 1 can inherit ] 
method : final [ no 1 can override ] 
variable : final [constant no 1 can modify ] 
------------------------------------------------
memory wast. 
immutable 
non self destructive 
String s  = "india" ; 
s.concat("gj"); 
s = india 
indaigj 
------------------------
StringBuffer --- sync
StringBuilder --- XXX 
------------------------
private 

default 

protected 

public 
------------------------


royal						ism 
public Abc - class 				Def - class   
  public demo 				   			import royal.Abc; 	
									Abc a = new Abc();
									a.demo();


------------------------
10 number -> sum 
array -> size -> same type 

1)   a[]   - 1dimension 
2)   a[][] - 2dimension  
3)   a[][][] - nDimension - multiDimension 
4)   ragged Array - JaggedArray -- AoA 

-----------------------------
class

object 

instance 

constructor 

inheritance 

super 

public private protected default 

array 
-----------------------------------------------
class : Person 
	private firstName
	private lastName 
	private gender 

	input()
	print()
create 3 person ram sita ravan and print in tabular format. //10

FirstName	LastName	Gender 
Ram		Patel		Male
Sita		Patel		Female	
Ravan		Patel		Male 

--------------------------------------------
modify Person class  and add 3 setters for firstname,
lastname and gender so person can modify any detail using setters. 

public void setFirstName(String fn){
	firstName = fn;
}

public String getFirstName(){
	return firstName;
}
--------------------------------------------
modify Person class and add 3 getters for firstname,
lastname and gender so person can we can print 
single field any time. 
--------------------------------------------
add 1 more field in person class salary. 
every person get 10000 as salary. 
--------------------------------
print all person details in tabular format
----------------------------------
find who get highest salary
---------------------------




create a class Cricketer 
having 3 property
name 
matchPlayed
rank 

create functions 
getData()

calculateRank()

	if match Played >= 150 
		rank is 1
	if matchPlayed >= 50
		rank is 5
	if matchPlayed >= 100
		rank is 3
	if matchPlayed < 50
		rank is 100

display()
	output:
	
		Name 	    :  	Ram
		MatchPlayed :   250
		Rank	    :   1


------------------------------------------------------
static --> class level { variable,method} 
final -->  {variable,method,class} 

final class -> no1 can inherit 
final variable -> constant 
final method --> no1 can override  


abstract --> 

class Bank{
	static int branchCode;

	public static int getBranchCode(){
		return branchCode;
	}
}



































































































